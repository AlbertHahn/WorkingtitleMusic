[tasks.exportaudio]
# env = { PATH = ["/opt/fmodstudio/"] }
script = '''
PATH=$PATH:/opt/fmodstudio 
fmodstudio -build audio/audio.fspro
'''
# args = ["-build", "audio/audio.fspro"]


[tasks.bundle]
# env = { "BUNDLE_LOCATION" = "target/bundle"}
# script_runner = "@shell"
script = '''
#!/usr/bin/env bash
BUNDLE_LOCATION="target/bundle"
mkdir -p $BUNDLE_LOCATION/
mkdir -p $BUNDLE_LOCATION/lib
mkdir -p $BUNDLE_LOCATION/assets/audio

# placing binaries
cp -a "target/x86_64-pc-windows-gnu/release/$CARGO_MAKE_BINARY_EXECUTABLE_NAME.exe" "$BUNDLE_LOCATION/"
cp -a "target/release/$CARGO_MAKE_BINARY_EXECUTABLE_NAME" "$BUNDLE_LOCATION/"

# FMOD libraries
FMOD_CORE_LOC="fmod/api/core/lib/x86_64"
FMOD_CORE_FILES=(
    "$FMOD_CORE_LOC/fmod.dll"
    "$FMOD_CORE_LOC/libfmod.so"
    "$FMOD_CORE_LOC/libfmod.so.13"
)
cp -aL "${FMOD_CORE_FILES[@]}" "$BUNDLE_LOCATION/lib/"

FMOD_STUDIO_LOC="fmod/api/studio/lib/x86_64"
FMOD_STUDIO_FILES=(
    "$FMOD_STUDIO_LOC/fmodstudio.dll"
    "$FMOD_STUDIO_LOC/libfmodstudio.so"
    "$FMOD_STUDIO_LOC/libfmodstudio.so.13"
)
cp -aL "${FMOD_STUDIO_FILES[@]}" "$BUNDLE_LOCATION/lib/"

# Assets
cp -r assets/* $BUNDLE_LOCATION/assets/
cp -r audio/Build/Desktop/* $BUNDLE_LOCATION/assets/audio
'''


[tasks.test1]
script = 'printenv'